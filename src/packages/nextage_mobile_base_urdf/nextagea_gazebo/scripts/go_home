#! /usr/bin/env python3
# Nextage Go Home Script

from trajectory_msgs.msg import JointTrajectoryPoint, JointTrajectory
import numpy as np
import rospy
import time
import sys

class Arms:

    def __init__(self, joint):
        self.pub_l = rospy.Publisher("/nextagea/larm_controller/command", JointTrajectory, queue_size=1)
        self.pub_r = rospy.Publisher("/nextagea/rarm_controller/command", JointTrajectory, queue_size=1)
        self.names_l = [u'LARM_JOINT0', u'LARM_JOINT1', u'LARM_JOINT2', u'LARM_JOINT3', u'LARM_JOINT4', u'LARM_JOINT5']
        self.names_r = [u'RARM_JOINT0', u'RARM_JOINT1', u'RARM_JOINT2', u'RARM_JOINT3', u'RARM_JOINT4', u'RARM_JOINT5']
        if sys.version_info.major < 3:
            self.names_l = [x.encode('ascii') for x in self.names_l]
            self.names_r = [x.encode('ascii') for x in self.names_r]

    def go_init(self):
        print("Nextage going to init pos")
        initpos = np.zeros(12)
        timing = 3.0

        trajectory_message = JointTrajectory()
        point = JointTrajectoryPoint()
        point.velocities = np.zeros(12).tolist()
        point.positions = initpos.tolist()
        point.time_from_start = rospy.Duration(timing)
        trajectory_message.points.append(point)

        time.sleep(5)
        trajectory_message.header.stamp = rospy.Time.now()

        trajectory_message.joint_names = self.names_l
        self.pub_l.publish(trajectory_message)
        trajectory_message.joint_names = self.names_r
        self.pub_r.publish(trajectory_message)

if __name__ == '__main__':
    rospy.init_node("go_init")
    robot = Arms(sys.argv)
    robot.go_init()