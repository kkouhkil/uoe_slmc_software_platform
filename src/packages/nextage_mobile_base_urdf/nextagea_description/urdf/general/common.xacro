<?xml version="1.0"?>
<robot xmlns:xacro="http://ros.org/wiki/xacro">

    <xacro:property name="nextagea_common_guard" default="true"/>
    <xacro:if value="${nextagea_common_guard}">
        <xacro:property name="nextagea_common_guard" value="false"/>

        <!-- Inertia macros -->
        <xacro:macro name="nxa_sphere_inertia_def" params="radius mass">
            <inertia ixx="${2/5*mass*radius*radius}" ixy="0" ixz="0" iyy="${2/5*mass*radius*radius}" iyz="0" izz="${2/5*mass*radius*radius}"/>
        </xacro:macro>
        <xacro:macro name="nxa_box_inertia_def" params="x y z mass">
            <inertia iyy="${mass*(z*z+x*x)/12.0}" ixx="${mass*(y*y+z*z)/12.0}" izz="${mass*(x*x+y*y)/12.0}" ixy="0.0" iyz="0.0" ixz="0.0"/>
        </xacro:macro>
        <xacro:macro name="nxa_cylinder_inertia_def" params="r h mass">
            <inertia ixx="${mass*(3*r*r+h*h)/12}" ixy="0" ixz="0" iyy="${mass*(3*r*r+h*h)/12}" iyz="0" izz="${mass*r*r/2}"/>
        </xacro:macro>

        <xacro:macro name="transmission_nx_joint" params="name">
            <transmission name="${name}_Trans">
                <type>transmission_interface/SimpleTransmission</type>
                <joint name="${name}">
                    <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
                </joint>
                <actuator name="${name}_Motor">
                    <mechanicalReduction>1</mechanicalReduction>
                </actuator>
            </transmission>
        </xacro:macro>

        <!-- Define contact properties -->
        <xacro:macro name="gazebo_nx_link" params="name color">
            <gazebo reference="gazebo_${name}">
                <material>Gazebo/${color}</material>
                <mu1 value="1.0" />
                <mu2 value="1.0" />
                <kp  value="1e5" />
                <kd  value="1e2" />
                <maxVel  value="100.0" />
                <minDepth  value="0.0" />
                <dampingFactor>0.01</dampingFactor>
            </gazebo>
        </xacro:macro>

        <!-- Camera gazebo plugin -->
        <!-- Properties -->
        <xacro:property name="M_PI" value="3.1415926535897931" />
        <xacro:property name="jnt_head_camera_displacement_x" value="0.0175" />
        <xacro:property name="jnt_head_camera_displacement_y" value="0.0725" />
        <xacro:property name="jnt_head_camera_displacement_z" value="0.105" />
        <xacro:property name="jnt_head_camera_rot_y" value="0.25" />
        <xacro:property name="link_head_camera_rot_z" value="0.05" />
        <xacro:property name="jnt_hand_camera_displacement_x" value="0.0525" />
        <xacro:property name="jnt_hand_camera_displacement_y" value="0.0525" />
        <xacro:property name="jnt_hand_camera_displacement_z" value="0.0" />
        <xacro:property name="jnt_hand_camera_rot_y" value="1.5708" />
        <xacro:property name="link_hand_camera_rot_z" value="0.0" />

        <xacro:macro name="camera_joint_link_gzplugin"
        params="camera_name link_parent jnt_displacement_x jnt_displacement_y jnt_displacement_z jnt_rotation_x jnt_rotation_y jnt_rotation_z link_displacement_x link_displacement_y link_displacement_z link_rotation_x link_rotation_y link_rotation_z">
            <joint name="${camera_name}" type="fixed">
            <origin
                xyz="${jnt_displacement_x} ${jnt_displacement_y} ${jnt_displacement_z}"
                rpy="${jnt_rotation_x} ${jnt_rotation_y} ${jnt_rotation_z}" />
            <parent link="${link_parent}" />
            <child link="${camera_name}_Link" />
            </joint>
            <link name="${camera_name}_Link">
            <visual>
                <origin
                xyz="${link_displacement_x} ${link_displacement_y} ${link_displacement_z}"
                rpy="${link_rotation_x} ${link_rotation_y} ${link_rotation_z}" />
                <geometry>
                <cylinder length="0.01" radius="0.015" />
                </geometry>
                <material name="Blue" />
            </visual>
            <inertial>
                <origin xyz="0 0 0" rpy="0 0 0" />
                <mass value="1e-6" />
                <inertia ixx="1e-12" ixy="0.0" ixz="0.0" iyy="1e-12" iyz="0.0"
                izz="1e-12" />
            </inertial>
            </link>
            <gazebo reference="${camera_name}_Link">
                <sensor type="camera" name="${camera_name}">
                    <update_rate>30.0</update_rate>
                    <camera name="${camera_name}">
                    <horizontal_fov>1.3962634</horizontal_fov>
                    <image>
                        <width>800</width>
                        <height>800</height>
                        <format>R8G8B8</format>
                    </image>
                    <clip>
                        <near>0.1</near>
                        <far>30</far>
                    </clip>
                    <noise>
                        <type>gaussian</type>
                        <!-- Noise is sampled independently per pixel on each frame. That pixel's 
                        noise value is added to each of its color channels, which at that point lie 
                        in the range [0,1]. -->
                        <mean>0.0</mean>
                        <stddev>0.007</stddev>
                    </noise>
                    </camera>
                    <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
                    <alwaysOn>true</alwaysOn>
                    <updateRate>0.0</updateRate>
                    <cameraName>${camera_name}</cameraName>
                    <imageTopicName>image_raw</imageTopicName>
                    <cameraInfoTopicName>camera_info</cameraInfoTopicName>
                    <frameName>${camera_name}_Link_frame</frameName>
                    <hackBaseline>0.07</hackBaseline>
                    <distortionK1>0.0</distortionK1>
                    <distortionK2>0.0</distortionK2>
                    <distortionK3>0.0</distortionK3>
                    <distortionT1>0.0</distortionT1>
                    <distortionT2>0.0</distortionT2>
                    </plugin>
                </sensor>
            </gazebo>
        </xacro:macro>

    </xacro:if>

    <xacro:macro name="sphere_inertia_def" params="radius mass">
        <inertia ixx="${2/5*mass*radius*radius}" ixy="0" ixz="0" iyy="${2/5*mass*radius*radius}" iyz="0" izz="${2/5*mass*radius*radius}"/>
    </xacro:macro>

</robot>